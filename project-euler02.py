# -*- coding: utf-8 -*-
"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
find the sum of the even-valued terms.
"""

# Brute force solution - not the most efficient by far
# More efficient solutions exist using modular arithmetic etc

def fibonacci(n):
    if n <= 1:
        return n 
    else:
        return fibonacci(n - 2) + fibonacci(n - 1)
    
n = 1
total = 0
while fibonacci(n) < 4000000:
    num = fibonacci(n)
    if num % 2 == 0:
        total += num
        n += 1
    else:
        n += 1

print(total)
